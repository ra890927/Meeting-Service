// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/room": {
            "put": {
                "description": "Update room information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update room information",
                "parameters": [
                    {
                        "description": "Room information",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presentations.UpdateRoomInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.UpdateRoomResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create a new room",
                "parameters": [
                    {
                        "description": "Room information",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presentations.CreateRoomInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.CreateRoomResponse"
                        }
                    }
                }
            }
        },
        "/admin/room/{id}": {
            "delete": {
                "description": "Delete room by room ID",
                "tags": [
                    "admin"
                ],
                "summary": "Delete room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "put": {
                "description": "Update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presentations.UpdateUserBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.RegisterUpdateUserResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presentations.LoginParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.LoginResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logout a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.LogoutResponse"
                        }
                    }
                }
            }
        },
        "/auth/whoami": {
            "get": {
                "description": "Get the user who is logged in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get the user who is logged in",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.WhoAmIResponse"
                        }
                    }
                }
            }
        },
        "/code/type": {
            "put": {
                "description": "Update a code type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "code"
                ],
                "summary": "Update a code type",
                "parameters": [
                    {
                        "description": "CodeType",
                        "name": "codeType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presentations.UpdateCodeTypeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.UpdateCodeTypeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new code type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "code"
                ],
                "summary": "Create a new code type",
                "parameters": [
                    {
                        "description": "CodeType",
                        "name": "codeType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presentations.CreateCodeTypeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.CreateCodeTypeResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a code type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "code"
                ],
                "summary": "Delete a code type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CodeType ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.DeleteCodeTypeResponse"
                        }
                    }
                }
            }
        },
        "/code/type/getAllCodeTypes": {
            "get": {
                "description": "Get all code types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "code"
                ],
                "summary": "Get all code types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.GetAllCodeTypesResponse"
                        }
                    }
                }
            }
        },
        "/code/type/getCodeTypeByID": {
            "get": {
                "description": "Get a code type by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "code"
                ],
                "summary": "Get a code type by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CodeType ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.CreateCodeTypeResponse"
                        }
                    }
                }
            }
        },
        "/code/value": {
            "put": {
                "description": "Update a code value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "code"
                ],
                "summary": "Update a code value",
                "parameters": [
                    {
                        "description": "CodeValue",
                        "name": "codeValue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presentations.UpdateCodeValueInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.UpdateCodeValueResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new code value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "code"
                ],
                "summary": "Create a new code value",
                "parameters": [
                    {
                        "description": "CodeValue",
                        "name": "codeValue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presentations.CreateCodeValueInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.CreateCodeValueResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a code value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "code"
                ],
                "summary": "Delete a code value",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CodeValue ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.DeleteCodeValueResponse"
                        }
                    }
                }
            }
        },
        "/code/value/getCodeValueByID": {
            "get": {
                "description": "Get a code value by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "code"
                ],
                "summary": "Get a code value by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CodeValue ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.GetCodeValueByIDResponse"
                        }
                    }
                }
            }
        },
        "/file": {
            "post": {
                "description": "Upload a file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Upload a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meeting ID",
                        "name": "meeting_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.UploadFileResponse"
                        }
                    }
                }
            }
        },
        "/file/getFileURLsByMeetingID/{meeting_id}": {
            "get": {
                "description": "Get files by meeting ID",
                "tags": [
                    "File"
                ],
                "summary": "Get files by meeting ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meeting ID",
                        "name": "meeting_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.GetFileURLsByMeetingIDResponse"
                        }
                    }
                }
            }
        },
        "/file/{id}": {
            "delete": {
                "description": "Delete a file",
                "tags": [
                    "File"
                ],
                "summary": "Delete a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.DeleteFileResponse"
                        }
                    }
                }
            }
        },
        "/meeting": {
            "put": {
                "description": "Update a meeting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meeting"
                ],
                "summary": "Update a meeting",
                "parameters": [
                    {
                        "description": "Meeting details",
                        "name": "meeting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presentations.UpdateMeetingBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.CreateUpdateGetMeetingResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a meeting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meeting"
                ],
                "summary": "Create a meeting",
                "parameters": [
                    {
                        "description": "Meeting details",
                        "name": "meeting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presentations.CreateMeetingBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.CreateUpdateGetMeetingResponse"
                        }
                    }
                }
            }
        },
        "/meeting/getAllMeetings": {
            "get": {
                "description": "Get all meetings",
                "tags": [
                    "Meeting"
                ],
                "summary": "Get all meetings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.GetAllMeetingsResponse"
                        }
                    }
                }
            }
        },
        "/meeting/getMeetingsByParticipantId": {
            "get": {
                "description": "Get meetings by participant ID",
                "tags": [
                    "Meeting"
                ],
                "summary": "Get meetings by participant ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Participant ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.GetAllMeetingsResponse"
                        }
                    }
                }
            }
        },
        "/meeting/getMeetingsByRoomIdAndDatePeriod": {
            "get": {
                "description": "Get meetings by room ID and date",
                "tags": [
                    "Meeting"
                ],
                "summary": "Get meetings by room ID and date",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "room_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date",
                        "name": "date_from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date",
                        "name": "date_to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.GetAllMeetingsResponse"
                        }
                    }
                }
            }
        },
        "/meeting/{id}": {
            "get": {
                "description": "Get a meeting",
                "tags": [
                    "Meeting"
                ],
                "summary": "Get a meeting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meeting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.CreateUpdateGetMeetingResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a meeting",
                "tags": [
                    "Meeting"
                ],
                "summary": "Delete a meeting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meeting ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.DeleteMeetingResponse"
                        }
                    }
                }
            }
        },
        "/room/getAllRooms": {
            "get": {
                "description": "Get all rooms",
                "tags": [
                    "room"
                ],
                "summary": "Get all rooms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.GetAllRoomsResponse"
                        }
                    }
                }
            }
        },
        "/room/{id}": {
            "get": {
                "description": "Get room by ID",
                "tags": [
                    "room"
                ],
                "summary": "Get room by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.GetRoomByIDResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presentations.RegisterUserBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.RegisterUpdateUserResponse"
                        }
                    }
                }
            }
        },
        "/user/getAllUsers": {
            "get": {
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presentations.GetAllUsersResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CodeType": {
            "type": "object",
            "properties": {
                "code_values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CodeValue"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "type_desc": {
                    "type": "string"
                },
                "type_name": {
                    "type": "string"
                }
            }
        },
        "models.CodeValue": {
            "type": "object",
            "properties": {
                "code_type_id": {
                    "type": "integer"
                },
                "code_value": {
                    "type": "string"
                },
                "code_value_desc": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "presentations.CreateCodeTypeInput": {
            "type": "object",
            "required": [
                "type_desc",
                "type_name"
            ],
            "properties": {
                "type_desc": {
                    "type": "string"
                },
                "type_name": {
                    "type": "string"
                }
            }
        },
        "presentations.CreateCodeTypeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "code_type": {
                            "type": "object",
                            "properties": {
                                "code_values": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/models.CodeValue"
                                    }
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "type_desc": {
                                    "type": "string"
                                },
                                "type_name": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.CreateCodeValueInput": {
            "type": "object",
            "required": [
                "code_type_id",
                "code_value",
                "code_value_desc"
            ],
            "properties": {
                "code_type_id": {
                    "type": "integer"
                },
                "code_value": {
                    "type": "string"
                },
                "code_value_desc": {
                    "type": "string"
                }
            }
        },
        "presentations.CreateCodeValueResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "code_value": {
                            "type": "object",
                            "properties": {
                                "code_type_id": {
                                    "type": "integer"
                                },
                                "code_value": {
                                    "type": "string"
                                },
                                "code_value_desc": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.CreateMeetingBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "organizer": {
                    "type": "integer"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "room_id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "status_type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "presentations.CreateRoomInput": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "room_name": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "presentations.CreateRoomResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "room": {
                            "type": "object",
                            "properties": {
                                "capacity": {
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "room_name": {
                                    "type": "string"
                                },
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "type": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.CreateUpdateGetMeetingResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "meeting": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "end_time": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "organizer": {
                                    "type": "integer"
                                },
                                "participants": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "room_id": {
                                    "type": "integer"
                                },
                                "start_time": {
                                    "type": "string"
                                },
                                "status_type": {
                                    "type": "string"
                                },
                                "title": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.DeleteCodeTypeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.DeleteCodeValueResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.DeleteFileResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.DeleteMeetingResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.GetAllCodeTypesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "code_types": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CodeType"
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.GetAllMeetingsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "meetings": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    },
                                    "end_time": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "organizer": {
                                        "type": "integer"
                                    },
                                    "participants": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "room_id": {
                                        "type": "integer"
                                    },
                                    "start_time": {
                                        "type": "string"
                                    },
                                    "status_type": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.GetAllRoomsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "rooms": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "capacity": {
                                        "type": "integer"
                                    },
                                    "id": {
                                        "type": "integer"
                                    },
                                    "room_name": {
                                        "type": "string"
                                    },
                                    "rules": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.GetAllUsersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "users": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "integer"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.GetCodeValueByIDResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "code_value": {
                            "$ref": "#/definitions/models.CodeValue"
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.GetFileURLsByMeetingIDResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "file_name": {
                                "type": "string"
                            },
                            "uploader_id": {
                                "type": "integer"
                            },
                            "url": {
                                "type": "string"
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.GetRoomByIDResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "room": {
                            "type": "object",
                            "properties": {
                                "capacity": {
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "room_name": {
                                    "type": "string"
                                },
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "type": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.LoginParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "presentations.LoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        },
                        "token": {
                            "type": "string"
                        },
                        "user": {
                            "type": "object",
                            "properties": {
                                "created_at": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "role": {
                                    "type": "string"
                                },
                                "updated_at": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.LogoutResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.RegisterUpdateUserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "role": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.RegisterUserBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "presentations.UpdateCodeTypeInput": {
            "type": "object",
            "required": [
                "id",
                "type_desc",
                "type_name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "type_desc": {
                    "type": "string"
                },
                "type_name": {
                    "type": "string"
                }
            }
        },
        "presentations.UpdateCodeTypeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "code_type": {
                            "$ref": "#/definitions/models.CodeType"
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.UpdateCodeValueInput": {
            "type": "object",
            "required": [
                "code_type_id",
                "code_value",
                "code_value_desc",
                "id"
            ],
            "properties": {
                "code_type_id": {
                    "type": "integer"
                },
                "code_value": {
                    "type": "string"
                },
                "code_value_desc": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "presentations.UpdateCodeValueResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "code_value": {
                            "type": "object",
                            "properties": {
                                "code_type_id": {
                                    "type": "integer"
                                },
                                "code_value": {
                                    "type": "string"
                                },
                                "code_value_desc": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.UpdateMeetingBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "organizer": {
                    "type": "integer"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "room_id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "status_type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "presentations.UpdateRoomInput": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "room_name": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "presentations.UpdateRoomResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "room": {
                            "type": "object",
                            "properties": {
                                "capacity": {
                                    "type": "integer"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "room_name": {
                                    "type": "string"
                                },
                                "rules": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "type": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.UpdateUserBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "presentations.UploadFileResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "file_name": {
                            "type": "string"
                        },
                        "uploader_id": {
                            "type": "integer"
                        },
                        "url": {
                            "type": "string"
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presentations.WhoAmIResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "integer"
                                },
                                "role": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
